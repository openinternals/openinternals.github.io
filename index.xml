<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Open Internals Podcast</title>
    <link>https://openinternals.github.io/</link>
    <description>Recent content on The Open Internals Podcast</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 May 2018 15:19:43 +0530</lastBuildDate>
    
	<atom:link href="https://openinternals.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>github.com/mholt/caddy</title>
      <link>https://openinternals.github.io/posts/mholt-caddy/</link>
      <pubDate>Mon, 07 May 2018 15:19:43 +0530</pubDate>
      
      <guid>https://openinternals.github.io/posts/mholt-caddy/</guid>
      <description>Caddy is a cool web server written in Golang. Go standard library already has a production ready server, used to serve the chromium downloads etc, according to Andrew Gerrand. What caddy does is piggyback on that barebones implementation and add a lot of goodies to it. This includes automatic HTTPS and HTTP/2 support, QUIC support etc.
The entire project is implemented as a pluggable architecture, so much so that the &amp;ldquo;http&amp;rdquo; type of server is a plugin.</description>
    </item>
    
    <item>
      <title>Welcome to Open Internals</title>
      <link>https://openinternals.github.io/posts/welcome-to-open-internals/</link>
      <pubDate>Sat, 31 Mar 2018 15:19:43 +0530</pubDate>
      
      <guid>https://openinternals.github.io/posts/welcome-to-open-internals/</guid>
      <description>There are various technical podcasts out there. Some of my favorites are the SE Radio podcast.
But none of them go as deeply into the guts of the open source packages as I would prefer. So, this I decided to roll my own podcast which is just about the technical details of open source packages.
Hope it is useful!
package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;Let&amp;#39;s Roll!&amp;#34;) }</description>
    </item>
    
  </channel>
</rss>